name: Build code, run unit tests, and perform security scans

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build and Analyze with SonarCloud
    steps:
      - uses: actions/checkout@v3
        name: Checkout code

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven and run SonarCloud analysis
        run: mvn -B clean verify sonar:sonar \
              -Dsonar.projectKey=microserviciosProductOrder \
              -Dsonar.organization=walyson-scarazzati \
              -Dsonar.host.url=https://sonarcloud.io \
              -Dsonar.login=${{ secrets.SONAR_TOKEN }}

      - name: Run unit tests
        run: mvn test

  security:
    runs-on: ubuntu-latest
    needs: build
    name: Run SCA with Snyk
    steps:
      - uses: actions/checkout@v3
        name: Checkout code

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/maven@v1
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  zap_scan:
    runs-on: ubuntu-latest
    needs: security
    name: Run DAST scan with OWASP ZAP
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: ZAP Scan
        uses: zaproxy/action-full-scan@v0.10.0
        with:
          docker_name: 'owasp/zap2docker-stable'
          target: 'http://testphp.vulnweb.com/'  # Replace with your application's URL
          rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a'
