#server.port=${PORT:${SERVER_PORT:0}}
server.port=8089

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/order_service?createDatabaseIfNotExist=true
spring.datasource.username=root
spring.datasource.password=123456
spring.jpa.hibernate.ddl-auto=update

spring.application.name=order-service
eureka.client.serviceUrl.defaultZone=http://eureka:password@localhost:8761/eureka
eureka.instance.instanceId=${spring.application.name}:${spring.application.instance_id:${random.value}}

management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
feign.circuitbreaker.enabled=true

resilience4j.circuitbreaker.instances.inventario.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.inventario.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.inventario.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.inventario.slidingWindowSize=5
resilience4j.circuitbreaker.instances.inventario.failureRateThreshold=50
resilience4j.circuitbreaker.instances.inventario.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.inventario.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.inventario.automaticTransitionFromOpenToHalfOpenEnabled=true

resilience4j.timelimiter.instances.inventario.timeout-duration=3s

resilience4j.retry.instances.inventario.max-attempts=3
resilience4j.retry.instances.inventario.wait-duration=5s

spring.zipkin.base-url=http://localhost:9411
spring.sleuth.sampler.probability=1.0

spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.template.default-topic=notificationTopic
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping=event:com.msvc.order.event.OrderPlacedEvent

